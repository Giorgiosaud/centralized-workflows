name: Install Npm Dependencies
on:
  workflow_call:
    inputs:
      legacy-peer-deps:
        default: false
        type: boolean
      node-version:
        default: 18.x
        type: string
jobs:
  install-dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    concurrency: ci-${{ github.ref }}
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: Cache Node_modules based on npm-shrinkwrap changes
      id: cache-node-modules
      uses: actions/cache@v3
      env:
        cache-name: cache-modules
      with:
        path: ./node_modules
        lookup-only: true
        key: ${{ hashFiles('**/npm-shrinkwrap.json') }}-node-modules
    - name: setup node.js
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      uses: actions/setup-node@v3
      with:
        node-version: ${{inputs.node-version}}
        registry-url: 'https://registry.npmjs.org'
        cache: npm
    - name: Clean install dependencies full
      if: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' && !inputs.legacy-peer-deps }}
      run: npm ci
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This gets generated automatically
    - name: Clean install dependencies full with flag legacy peer deps
      if: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' && inputs.legacy-peer-deps }}
      run: npm ci --legacy-peer-deps
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This gets generated automatically
    
